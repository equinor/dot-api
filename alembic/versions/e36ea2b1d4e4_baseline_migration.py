"""baseline migration

Revision ID: e36ea2b1d4e4
Revises: 
Create Date: 2025-10-28 14:06:38.268699

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from src.models.guid import GUID

# revision identifiers, used by Alembic.
revision: str = 'e36ea2b1d4e4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=60), nullable=False),
    sa.Column('azure_id', sa.String(length=60), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('azure_id')
    )
    op.create_table('project',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('name', sa.String(length=60), nullable=False),
    sa.Column('opportunityStatement', sa.String(length=600), nullable=False),
    sa.Column('public', sa.Boolean(), nullable=False),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('updated_by_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_project_name'), 'project', ['name'], unique=False)
    op.create_table('project_role',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('project_id', GUID(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(length=60), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('updated_by_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_project_role_project_id'), 'project_role', ['project_id'], unique=False)
    op.create_index(op.f('ix_project_role_user_id'), 'project_role', ['user_id'], unique=False)
    op.create_table('scenario',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('project_id', GUID(), nullable=False),
    sa.Column('name', sa.String(length=60), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('updated_by_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_scenario_name'), 'scenario', ['name'], unique=False)
    op.create_index(op.f('ix_scenario_project_id'), 'scenario', ['project_id'], unique=False)
    op.create_table('issue',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('scenario_id', GUID(), nullable=False),
    sa.Column('type', sa.String(length=60), nullable=False),
    sa.Column('boundary', sa.String(length=60), nullable=False),
    sa.Column('name', sa.String(length=60), nullable=False),
    sa.Column('description', sa.String(length=600), nullable=False),
    sa.Column('order', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('updated_by_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['scenario_id'], ['scenario.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_issue_name'), 'issue', ['name'], unique=False)
    op.create_index(op.f('ix_issue_scenario_id'), 'issue', ['scenario_id'], unique=False)
    op.create_table('objective',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('scenario_id', GUID(), nullable=False),
    sa.Column('name', sa.String(length=60), nullable=False),
    sa.Column('type', sa.String(length=60), nullable=False),
    sa.Column('description', sa.String(length=600), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('updated_by_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['scenario_id'], ['scenario.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_objective_name'), 'objective', ['name'], unique=False)
    op.create_index(op.f('ix_objective_scenario_id'), 'objective', ['scenario_id'], unique=False)
    op.create_table('opportunity',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('scenario_id', GUID(), nullable=False),
    sa.Column('description', sa.String(length=600), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('updated_by_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['scenario_id'], ['scenario.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_opportunity_scenario_id'), 'opportunity', ['scenario_id'], unique=False)
    op.create_table('decision',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('issue_id', GUID(), nullable=False),
    sa.Column('type', sa.String(length=60), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['issue_id'], ['issue.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_decision_issue_id'), 'decision', ['issue_id'], unique=False)
    op.create_table('node',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('scenario_id', GUID(), nullable=False),
    sa.Column('issue_id', GUID(), nullable=False),
    sa.Column('name', sa.String(length=60), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['issue_id'], ['issue.id'], ),
    sa.ForeignKeyConstraint(['scenario_id'], ['scenario.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_node_issue_id'), 'node', ['issue_id'], unique=False)
    op.create_index(op.f('ix_node_name'), 'node', ['name'], unique=False)
    op.create_index(op.f('ix_node_scenario_id'), 'node', ['scenario_id'], unique=False)
    op.create_table('uncertainty',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('issue_id', GUID(), nullable=False),
    sa.Column('is_key', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['issue_id'], ['issue.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_uncertainty_issue_id'), 'uncertainty', ['issue_id'], unique=False)
    op.create_table('utility',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('issue_id', GUID(), nullable=False),
    sa.Column('values', sa.String(length=60), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['issue_id'], ['issue.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_utility_issue_id'), 'utility', ['issue_id'], unique=False)
    op.create_table('value_metric',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('issue_id', GUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['issue_id'], ['issue.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_value_metric_issue_id'), 'value_metric', ['issue_id'], unique=False)
    op.create_table('edge',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('tail_id', GUID(), nullable=False),
    sa.Column('head_id', GUID(), nullable=False),
    sa.Column('scenario_id', GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['head_id'], ['node.id'], ),
    sa.ForeignKeyConstraint(['scenario_id'], ['scenario.id'], ),
    sa.ForeignKeyConstraint(['tail_id'], ['node.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_edge_head_id'), 'edge', ['head_id'], unique=False)
    op.create_index(op.f('ix_edge_scenario_id'), 'edge', ['scenario_id'], unique=False)
    op.create_index(op.f('ix_edge_tail_id'), 'edge', ['tail_id'], unique=False)
    op.create_table('node_style',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('node_id', GUID(), nullable=False),
    sa.Column('x_position', sa.INTEGER(), nullable=False),
    sa.Column('y_position', sa.INTEGER(), nullable=False),
    sa.Column('width', sa.INTEGER(), nullable=False),
    sa.Column('height', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['node_id'], ['node.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_node_style_node_id'), 'node_style', ['node_id'], unique=False)
    op.create_table('option',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('decision_id', GUID(), nullable=False),
    sa.Column('name', sa.String(length=60), nullable=False),
    sa.Column('utility', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['decision_id'], ['decision.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_option_decision_id'), 'option', ['decision_id'], unique=False)
    op.create_table('outcome',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('uncertainty_id', GUID(), nullable=False),
    sa.Column('name', sa.String(length=60), nullable=False),
    sa.Column('probability', sa.Float(), nullable=False),
    sa.Column('utility', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['uncertainty_id'], ['uncertainty.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_outcome_uncertainty_id'), 'outcome', ['uncertainty_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_outcome_uncertainty_id'), table_name='outcome')
    op.drop_table('outcome')
    op.drop_index(op.f('ix_option_decision_id'), table_name='option')
    op.drop_table('option')
    op.drop_index(op.f('ix_node_style_node_id'), table_name='node_style')
    op.drop_table('node_style')
    op.drop_index(op.f('ix_edge_tail_id'), table_name='edge')
    op.drop_index(op.f('ix_edge_scenario_id'), table_name='edge')
    op.drop_index(op.f('ix_edge_head_id'), table_name='edge')
    op.drop_table('edge')
    op.drop_index(op.f('ix_value_metric_issue_id'), table_name='value_metric')
    op.drop_table('value_metric')
    op.drop_index(op.f('ix_utility_issue_id'), table_name='utility')
    op.drop_table('utility')
    op.drop_index(op.f('ix_uncertainty_issue_id'), table_name='uncertainty')
    op.drop_table('uncertainty')
    op.drop_index(op.f('ix_node_scenario_id'), table_name='node')
    op.drop_index(op.f('ix_node_name'), table_name='node')
    op.drop_index(op.f('ix_node_issue_id'), table_name='node')
    op.drop_table('node')
    op.drop_index(op.f('ix_decision_issue_id'), table_name='decision')
    op.drop_table('decision')
    op.drop_index(op.f('ix_opportunity_scenario_id'), table_name='opportunity')
    op.drop_table('opportunity')
    op.drop_index(op.f('ix_objective_scenario_id'), table_name='objective')
    op.drop_index(op.f('ix_objective_name'), table_name='objective')
    op.drop_table('objective')
    op.drop_index(op.f('ix_issue_scenario_id'), table_name='issue')
    op.drop_index(op.f('ix_issue_name'), table_name='issue')
    op.drop_table('issue')
    op.drop_index(op.f('ix_scenario_project_id'), table_name='scenario')
    op.drop_index(op.f('ix_scenario_name'), table_name='scenario')
    op.drop_table('scenario')
    op.drop_index(op.f('ix_project_role_user_id'), table_name='project_role')
    op.drop_index(op.f('ix_project_role_project_id'), table_name='project_role')
    op.drop_table('project_role')
    op.drop_index(op.f('ix_project_name'), table_name='project')
    op.drop_table('project')
    op.drop_table('user')
    # ### end Alembic commands ###
